buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://archiva-repository.apache.org/archiva/repository/public/" }
    }

    dependencies {
        classpath("org.ysb33r.gradle:grolifant:0.12.1")
        classpath("com.burgstaller:okhttp-digest:1.10")
    }
}

plugins {
    id("idea")
    id("org.asciidoctor.jvm.gems") version("4.0.0-alpha.1")
    id("org.asciidoctor.jvm.revealjs") version("4.0.0-alpha.1")
}

repositories {
    mavenCentral()
    ruby { gems() }
}

version = "0.0.1"

revealjs {
    version = "3.1.0"
    templateGitHub {
        organisation = "hakimel"
        repository = "reveal.js"
        tag = "3.9.1"
    }
}

asciidoctorRevealJs {
    sourceDir(file("src/docs/asciidoc"))
    baseDirFollowsSourceFile()
    resources {
        from("${sourceDir}/images") {
            include("**")
            into("images")
        }
    }

    attributes(
            "build-gradle": file("$projectDir/build.gradle"),
            "endpoint-url": "https://cheroliv.github.io/",
            "source-highlighter": "coderay",
            "coderay-css": "style",
            "imagesdir": "./images",
            "toc": "left",
            "icons": "font",
            "setanchors": "",
            "idprefix": "slide-",
            "idseparator": "-",
            "docinfo": "shared",
            "revealjs_theme": "black",
            "revealjs_transition": "linear",
            "revealjs_history": "true",
            "revealjs_slideNumber": "true"
    )
}


tasks.register("asciidoctor") {
    group("slider")
    dependsOn(tasks.asciidoctorRevealJs)
}

String deckFileProperty() {
    def prop = new Properties()
    file("$projectDir/deck.properties").withInputStream {
        prop.load(it)
    }
    return prop["deck.file"].toString()
}

final DECK_FILE = deckFileProperty()
final DECK_PATH = "build/docs/asciidocRevealJs/$DECK_FILE"
final DECK_FOLDER_PATH = "${layout.buildDirectory}/docs/asciidocRevealJs"

tasks.register("cleanBuild") {
    group("slider")
    doFirst {
        file("$DECK_FOLDER_PATH/images").deleteDir()
        file(DECK_FOLDER_PATH)
                .listFiles()
                .find { File f -> f.isFile() && f.name.endsWith('.html') }
                .each { File f -> f.delete() }
    }
}

tasks.asciidoctorRevealJs.dependsOn("cleanBuild")


tasks.register('openFirefox', Exec) {
    group("slider")
    dependsOn("asciidoctor")
    commandLine("firefox", DECK_PATH)
    workingDir = projectDir
}

tasks.register('openChromium', Exec) {
    group("slider")
    dependsOn("asciidoctor")
    commandLine("chromium", DECK_PATH)
    workingDir = projectDir
}

wrapper { gradleVersion = "8.6" }
